<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yinmimoney.web.p2pnew.dao.SysTaskHandelMapper" >
  <resultMap id="BaseResultMap" type="com.yinmimoney.web.p2pnew.pojo.SysTaskHandel" extends="associationMap">
	<id column="id" property="id" />
	<result column="module_name" property="moduleName" />
	<result column="hostname" property="hostname" />
	<result column="ip_address" property="ipAddress" />
	<result column="is_enabled" property="isEnabled" />
	<result column="remark" property="remark" />
	<result column="created_at" property="createdAt" />
	<result column="updated_at" property="updatedAt" />
  </resultMap>
  <sql id="Base_Column_List" >
		`id`
		,`module_name`
		,`hostname`
		,`ip_address`
		,`is_enabled`
		,`remark`
		,`created_at`
		,`updated_at`
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    SELECT 
    <include refid="Base_Column_List" />
    FROM `sys_task_handel`
    WHERE `id` = #{id}
  </select>
  <select id="getByCondition" resultMap="BaseResultMap" parameterType="java.util.Map" >
    SELECT 
    <include refid="Base_Column_List" />
    FROM `sys_task_handel`
    <include refid="map_params_where_condition" />
    <if test="orderBy == null" >
      ORDER BY `id` DESC
    </if>
    <if test="orderBy != null and orderBy != 'no'" >
      ORDER BY ${orderBy}
    </if>
	LIMIT 1
  </select>
  <select id="aggregate" parameterType="java.util.Map" resultType="java.util.Map">
    SELECT ${aggregate_sql} FROM `sys_task_handel`
    <include refid="map_params_where_condition" />
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    DELETE FROM `sys_task_handel`
    WHERE `id` = #{id}
  </delete>
  <insert id="insert" parameterType="com.yinmimoney.web.p2pnew.pojo.SysTaskHandel" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    INSERT INTO `sys_task_handel` (
	  `module_name`
	  ,`hostname`
	  ,`ip_address`
	  ,`is_enabled`
	  ,`remark`
	  ,`created_at`
	  ,`updated_at`
      )
    VALUES (
		  
		  #{moduleName}
		  ,
		  #{hostname}
		  ,
		  #{ipAddress}
		  ,
		  #{isEnabled}
		  ,
		  #{remark}
		  ,
		  <if test="createdAt != null" >
			#{createdAt}
      </if>
      <if test="createdAt == null" >
      NOW()
		  </if>
		  ,
		  #{updatedAt}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yinmimoney.web.p2pnew.pojo.SysTaskHandel" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    INSERT INTO `sys_task_handel`
    <trim prefix="(" suffix=")" suffixOverrides="," >
		  <if test="moduleName != null" >
			`module_name`,
		  </if>
		  <if test="hostname != null" >
			`hostname`,
		  </if>
		  <if test="ipAddress != null" >
			`ip_address`,
		  </if>
		  <if test="isEnabled != null" >
			`is_enabled`,
		  </if>
		  <if test="remark != null" >
			`remark`,
		  </if>
			`created_at`,
		  <if test="updatedAt != null" >
			`updated_at`,
		  </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
		  <if test="moduleName != null" >
			#{moduleName},
		  </if>
		  <if test="hostname != null" >
			#{hostname},
		  </if>
		  <if test="ipAddress != null" >
			#{ipAddress},
		  </if>
		  <if test="isEnabled != null" >
			#{isEnabled},
		  </if>
		  <if test="remark != null" >
			#{remark},
		  </if>
		  <if test="createdAt != null" >
			#{createdAt},
      </if>
      <if test="createdAt == null" >
      NOW(),
		  </if>
		  <if test="updatedAt != null" >
			#{updatedAt},
		  </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yinmimoney.web.p2pnew.pojo.SysTaskHandel" >
    UPDATE `sys_task_handel`
    <set >
	  <if test="moduleName != null" >
        `module_name` = #{moduleName},
      </if>
	  <if test="hostname != null" >
        `hostname` = #{hostname},
      </if>
	  <if test="ipAddress != null" >
        `ip_address` = #{ipAddress},
      </if>
	  <if test="isEnabled != null" >
        `is_enabled` = #{isEnabled},
      </if>
	  <if test="remark != null" >
        `remark` = #{remark},
      </if>
	  <if test="createdAt != null" >
        `created_at` = #{createdAt},
      </if>
	  <if test="updatedAt != null" >
        `updated_at` = #{updatedAt},
      </if>
    </set>
    WHERE `id` = #{id}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yinmimoney.web.p2pnew.pojo.SysTaskHandel" >
	UPDATE `sys_task_handel` SET
        `module_name` = #{moduleName},
        `hostname` = #{hostname},
        `ip_address` = #{ipAddress},
        `is_enabled` = #{isEnabled},
        `remark` = #{remark},
        `created_at` = #{createdAt},
        `updated_at` = #{updatedAt}
    WHERE `id` = #{id}
  </update>
  <update id="updateByCondition" parameterType="java.util.Map" >
    UPDATE `sys_task_handel`
    <set>
	  <if test="entity.moduleName != null" >
        `module_name` = #{entity.moduleName},
      </if>
	  <if test="entity.hostname != null" >
        `hostname` = #{entity.hostname},
      </if>
	  <if test="entity.ipAddress != null" >
        `ip_address` = #{entity.ipAddress},
      </if>
	  <if test="entity.isEnabled != null" >
        `is_enabled` = #{entity.isEnabled},
      </if>
	  <if test="entity.remark != null" >
        `remark` = #{entity.remark},
      </if>
	  <if test="entity.createdAt != null" >
        `created_at` = #{entity.createdAt},
      </if>
	  <if test="entity.updatedAt != null" >
        `updated_at` = #{entity.updatedAt},
      </if>
      <foreach collection="entity.nullColums" item="nullColum">
        `${nullColum}` = NULL,
      </foreach>
    </set>
    <include refid="map_params_where_condition" />
  </update>
  <update id="updateIncreateNumbers" parameterType="java.util.Map" >
    UPDATE `sys_task_handel`
    <set>
      <foreach collection="increateNumbers" item="numberCloums">
        `${numberCloums.column}` = `${numberCloums.column}` + #{numberCloums.number},
      </foreach>
    </set>
    <include refid="map_params_where_condition" />
  </update>
  <sql id="map_params_where_condition" >
    <trim prefix="WHERE" prefixOverrides="AND">
	  <if test="id != null" >
        AND `id` = #{id}
	  </if>
	  <if test="moduleName != null" >
        AND `module_name` = #{moduleName}
	  </if>
	  <if test="hostname != null" >
        AND `hostname` = #{hostname}
	  </if>
	  <if test="ipAddress != null" >
        AND `ip_address` = #{ipAddress}
	  </if>
	  <if test="isEnabled != null" >
        AND `is_enabled` = #{isEnabled}
	  </if>
	  <if test="remark != null" >
        AND `remark` = #{remark}
	  </if>
	  <if test="createdAt != null" >
        AND `created_at` = #{createdAt}
	  </if>
	  <if test="updatedAt != null" >
        AND `updated_at` = #{updatedAt}
	  </if>
	  <if test="condition != null">
	  <if test="condition.id != null" >
        AND `id` = #{condition.id}
	  </if>
	  <if test="condition.moduleName != null" >
        AND `module_name` = #{condition.moduleName}
	  </if>
	  <if test="condition.hostname != null" >
        AND `hostname` = #{condition.hostname}
	  </if>
	  <if test="condition.ipAddress != null" >
        AND `ip_address` = #{condition.ipAddress}
	  </if>
	  <if test="condition.isEnabled != null" >
        AND `is_enabled` = #{condition.isEnabled}
	  </if>
	  <if test="condition.remark != null" >
        AND `remark` = #{condition.remark}
	  </if>
	  <if test="condition.createdAt != null" >
        AND `created_at` = #{condition.createdAt}
	  </if>
	  <if test="condition.updatedAt != null" >
        AND `updated_at` = #{condition.updatedAt}
	  </if>
	  </if>
	  <if test="vo != null and !vo.expressionChainList.empty">
        AND
        <foreach collection="vo.expressionChainList" item="expressionChain" separator="OR">
          <if test="!expressionChain.expressionList.empty">
            <foreach collection="expressionChain.expressionList" item="expression" separator="AND">
              <choose>
                <when test="expression.type == 0">
                  `${expression.column}` ${expression.operator}
                </when>
                <when test="expression.type == 1">
                  `${expression.column}` ${expression.operator} #{expression.value}
                </when>
                <when test="expression.type == 2">
                  `${expression.column}` ${expression.operator} #{expression.value} AND #{expression.value1}
                </when>
                <when test="expression.type == 3">
                  `${expression.column}` ${expression.operator}
                  <foreach collection="expression.values" item="value" open="(" separator="," close=")">
                    #{value}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </if>
        </foreach>
      </if>
      <if test="expressionChainList != null and !expressionChainList.empty">
        AND
        <foreach collection="expressionChainList" item="expressionChain" separator="OR">
          <if test="!expressionChain.expressionList.empty">
            <foreach collection="expressionChain.expressionList" item="expression" separator="AND">
              <choose>
                <when test="expression.type == 0">
                  `${expression.column}` ${expression.operator}
                </when>
                <when test="expression.type == 1">
                  `${expression.column}` ${expression.operator} #{expression.value}
                </when>
                <when test="expression.type == 2">
                  `${expression.column}` ${expression.operator} #{expression.value} AND #{expression.value1}
                </when>
                <when test="expression.type == 3">
                  `${expression.column}` ${expression.operator}
                  <foreach collection="expression.values" item="value" open="(" separator="," close=")">
                    #{value}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </if>
        </foreach>
      </if>
      <include refid="map_params_where_condition_ext" />
    </trim>
  </sql>
  <select id="getList" resultMap="BaseResultMap" parameterType="java.util.Map" >
    SELECT
    <include refid="Base_Column_List" />
    FROM `sys_task_handel`
    <include refid="map_params_where_condition" />
    <if test="orderBy == null" >
      ORDER BY `id` DESC
    </if>
    <if test="orderBy != null and orderBy != 'no'" >
      ORDER BY ${orderBy}
    </if>
    <if test="pageBeginIndex != null and pageSize != null" >
      LIMIT #{pageBeginIndex},#{pageSize}
    </if>
    <if test="pageBeginIndex == null and pageSize != null" >
      LIMIT #{pageSize}
    </if>
    <if test="pageBeginIndex != null and pageSize == null" >
      LIMIT #{pageBeginIndex}
    </if>
  </select>
  <delete id="delete" parameterType="java.util.Map" >
    DELETE
    FROM `sys_task_handel`
    <include refid="map_params_where_condition" />
  </delete>
  <select id="getCount" resultType="java.lang.Integer" parameterType="java.util.Map" >
    SELECT COUNT(1)
    FROM `sys_task_handel`
    <include refid="map_params_where_condition" />
  </select>
</mapper>